{"name":"Tiraggo.edmx","tagline":"Full EDMX Metadata Served up with low level SQL Metadata","body":"TiraggoEdmx is a metadata engine that is capable of serving up all of the data in your EDMX file(s). This includes the mappings between your conceptual columns and physical database columns. You can get the low level SQL information and data types. EDMX Version 2 and 3 are both supported. Typically version 2 is created using VS2010 and version 3 is created using VS2012.\r\n\r\nTiraggoEdmx will continue to grow and many more features will be added to the 'TiraggoEntityInfo' class which is what makes using TiraggoEdmx so easy. There is a Windows.Forms sample you can in the TiraggoEdmx github repository, it's a great way to set a break point and examine the metadata by expanding the \"edmx\" class in the debugger.\r\n\r\nLet's take a look at how you use the 'TiraggoEntityInfo' class.\r\n\r\n```csharp\r\n// Typical Entity Framework classes here\r\nMetadataLoader loader = new MetadataLoader(this);\r\nEdmItemCollection items = loader.CreateEdmItemCollection(inputFile);\r\n\r\n// TiraggoEdmx code now ...\r\nEdmx edmx = Edmx.Load(@\"Model1.edmx\");\r\n\r\nforeach (EntityType e in items.GetItems<EntityType>().OrderBy(a => a.Name))\r\n{\r\n    // Everthing you need including your low level SQL metadata types\r\n    TiraggoEntityInfo info = new TiraggoEntityInfo(edmx, e.FullName);\r\n\r\n    foreach (tgColumnCLR prop in info.ConceptualModel.Properties)\r\n    {\r\n        // prop.Name is conceptual name, let's get the physical name\r\n        string physicalColumName = info.ColumnMappings[prop.Name];\r\n\r\n        // Let's now get the low level SQL info using the physical name\r\n        tgProperty sqlInfo = info.ColumnSQL[physicalColumName];\r\n\r\n        // Now we have the type such as 'nvarchar', 'timestamp', and more\r\n    }\r\n}\r\n```\r\n\r\n[Tiraggo.EF](http://brewdawg.github.io/Tiraggo.EF/) which builds the Tiraggo Dynamic Query classes (based on EntitySpaces) uses the TiraggoEdmx metadata library for the Entity Framework. ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}